21. Merge Two Sorted Lists
Merge two sorted linked lists and return it as a sorted list. The list should be made by splicing together the nodes of the first two lists.
题目
将两个集合里面的数合在一起
并且排序


 

Example 1:


Input: l1 = [1,2,4], l2 = [1,3,4]
Output: [1,1,2,3,4,4]
Example 2:

Input: l1 = [], l2 = []
Output: []
Example 3:

Input: l1 = [], l2 = [0]
Output: [0]

整体思路：
1.先设空集
2.再比较两个集合，一个个地放进空集

class Solution:
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        curr = dummy = ListNode(0) 设两个空集，相等
        curr 指向 空集最后一个当前值，要返回第一个数，再建一个dummy集
        while l1 and l2:     循环while，遍历l1和 l2两个集
            if l1.val < l2.val:    如果l1 的值 < l2的值
                curr.next = l1    空集放l1
                l1 = l1.next   把l1 的指针指向下一位
            else:      如果l1 > = l2 的值时
                curr.next = l2     先插入l2 
                l2 = l2.next   再把l2的指针指向l1
            curr = curr.next  更新curr的值
        curr.next = l1 or l2 还有另外一种情况，假设l1 里面的值全部> l2，则之前的while                          
                             循环遍历完了l1就不会理会l2,所以，要用or 说明不知道他们哪个是先结束的
				                    当插完一个集后，就插入另一个集
        return dummy.next    从第一个开始输出空集，起始点
