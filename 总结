Java 的命名规则：
1.第一个字母小写，下一个和后面的单词的开头大写，不使用连接符号：addPerson
2.下划线可能出现在 JUnit 测试方法名称中用以分隔名称的逻辑组件。一个典型的模式是：test<MethodUnderTest>_<state>，例如 testPop_emptyStack

运算符号   [] 中括号用于数组

1.int n =(int)Math.sqrt(i)的意思是对i进行开方运算，然后将结果转换为整型数bai据赋值给n。
int 是基本类型，直接存数值 
integer是对象，用一个引用指向这个对象(一个类)
Java中int和Integer关系是比较微妙的。关系如下：

a.int是基本的数据类型； 
b.Integer是int的封装类； 
c.int和Integer都可以表示某一个数值； 
d.int和Integer不能够互用，因为他们两种不同的数据类型；



2.char array:
https://www.edureka.co/blog/character-array-in-java/

3.区别： （1）public：可以被所有其他类所访问。 （2）private：只能被自己访问和修改。 （3）protected：自身，子类及同一个包中类可以访问。


4.for loop，for each loop，冒号意思是在d（下面代表是car）里面执行for loop

    String[] cars = {"Volvo", "BMW", "Ford", "Mazda"};
    for (String i : cars) {
      System.out.println(i);
   打印出来就是：
   Volvo
   BMW
   Ford
   Mazda

5.charAt （）： 用于查找字母位置index ： 从0 到stringlength - 1 ，输出数字

6. isSubString（）  ： 用于查找子串

7.compareTo()  ： 用于对比两个字符串相差多少个字母  例如x 于y 字符串对比，XcompareTo(y)， 如果x长于y 两个字母，则输出2， 如果短于两个字母，输出 -2， 为负数










在Python中有两种函数，一种是def定义的函数，另一种是lambda函数，也就是大家常说的匿名函数

eg.
def f(x):   普通写法                                  lambda x: 3*x+1 （ 缩写 ）lambda x,意思是input x
    return 3*x + 1

与sorted函数结合使用，比如：创建由元组构成的列表：

a=[('b',3),('a',2),('d',4),('c',1)]

按照第一个元素排序
sorted(a,key=lambda x:x[0])
[('a',2),('b',3),('c',1),('d',4)]

按照第二个元素排序
sorted(a,key=lambda x:x[1])
[('c',1),('a',2),('b',3),('d',4)]

在python里面
+= 代表adds a number to a variable, changing the variable itself in the process (whereas + would not). 
a+=b表示重新将a定义为=a+b,比如：
>>> a = 1
>>> b = 3
>>> c = 2
>>> a += c
>>> print(a)
3


float('inf') is used for setting a variable with an infinitely large value.

Python enumerate() 函数
enumerate() 函数用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在 for 循环当中。
例子：
>>>seasons = ['Spring', 'Summer', 'Fall', 'Winter']
>>> list(enumerate(seasons))
[(0, 'Spring'), (1, 'Summer'), (2, 'Fall'), (3, 'Winter')]
>>> list(enumerate(seasons, start=1))       # 下标从 1 开始
[(1, 'Spring'), (2, 'Summer'), (3, 'Fall'), (4, 'Winter')]




python的[:-1]和[::-1]用法及结果实例（取反、删除末尾字符串）
1. [::-1]  取反

a = "abcdef"
print (a[::-1])
结果：fedcba

2. [:-1] 删除最后一位

a = "abcdef"
print (a[:-1])
结果：abcde

>>> a=[1,5,9,11,2,66]

>>> a[1:]
[5, 9, 11, 2, 66]

>>> a[:1]
[1]

>>> a[-1:]
[66]

>>> a[:-1]
[1, 5, 9, 11, 2]

>>> a[3]
11

>>> a[3:]
[11, 2, 66]

>>> a[:3]
[1, 5, 9]

>>> a[-3:]
[11, 2, 66]

>>> a[:-3]
[1, 5, 9]

>>> a[::1]
[1, 5, 9, 11, 2, 66]

>>> a[::-1]
[66, 2, 11, 9, 5, 1]


