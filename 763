763. Partition Labels
A string S of lowercase English letters is given. 
We want to partition this string into as many parts as possible so that each letter appears 
in at most one part, and return a list of integers representing the size of these parts.

 

Example 1:

Input: S = "ababcbacadefegdehijhklij"
Output: [9,7,8]
Explanation:
The partition is "ababcbaca", "defegde", "hijhklij".
This is a partition so that each letter appears in at most one part.
A partition like "ababcbacadefegde", "hijhklij" is incorrect, because it splits S into less parts.
 

Note:

S will have length in range [1, 500].
S will consist of lowercase English letters ('a' to 'z') only.

ç­”æ¡ˆ

class Solution:
    def partitionLabels(self, S: str) -> List[int]:
        start = 0
        end = 0
        ans = []
        max_index= {item: index for index, item in enumerate(S)}
        
        for index, i in enumerate(S) :
            end = max(end, max_index[i])
            if index == end:
                ans.append(end - start + 1)
                start = index + 1
                
        return ans
