35. Search Insert Position
Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.
 题目:
1.给出已经排好序的数字
2.找出目标数字，输出位置
3.如果没有目标数字，则加入
4.再排序，输出该位置


 

Example 1:

Input: nums = [1,3,5,6], target = 5
Output: 2
Example 2:

Input: nums = [1,3,5,6], target = 2
Output: 1
Example 3:

Input: nums = [1,3,5,6], target = 7
Output: 4
Example 4:

Input: nums = [1,3,5,6], target = 0
Output: 0
Example 5:

Input: nums = [1], target = 0
Output: 0

思路：
有两种解法
1.if 条件判断语句
    如果找到，输出位置
		找不到，加入该数字，排序，再输出位置
2. 用for遍历
    如果相等，输出位置
		小于其中一个数字i，输出i的位置，因为目标数字会替代它的位置
		大于最后一个数字，输出数组的长度，因为序号从0开始，
		                                  最后一个是len-1，排在他之后是len


第一种解法
class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        if target in nums:    如果目标数字在list里面
            return nums.index(target)   输出index
        else:      如果不在
            nums.append(target)  加入该数字
            return sorted(nums).index(target)   排序nums，再输出目标数字的index

第二种解法
class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        for i in range(len(nums)):   遍历，i代表nums里面的数字的排位，1，2，3...
            if target == nums[i] :   如果目标数字= 其中i
                return i   输出排位
            elif target < nums[i]:   目标数字小于其中一个nums【i】 i
                return i   输出i 的位置，因为目标数字代替它的位置，它往后移
            elif target > nums[-1]:   如果目标数字大于最后一个数字
                return len(nums)  输出长度，不用-1，因为最后一个是len - 1，排在它后面t'mlen
