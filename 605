605. Can Place Flowers
You have a long flowerbed in which some of the plots are planted, and some are not. However, flowers cannot be planted in adjacent plots.

Given an integer array flowerbed containing 0's and 1's, where 0 means empty and 1 means not empty, and an integer n, return if n new flowers can be planted in the flowerbed without violating the no-adjacent-flowers rule.
题目分析：
1.要求种n 盆花，判断能不能种这么多花
2. 0 代表空位，有位置， 1 代表已经种了东西，没有空位
3. 花不能种相邻，必须前后是空的
 

Example 1:

Input: flowerbed = [1,0,0,0,1], n = 1
Output: true
Example 2:

Input: flowerbed = [1,0,0,0,1], n = 2
Output: false
 

Constraints:

1 <= flowerbed.length <= 2 * 104
flowerbed[i] is 0 or 1.
There are no two adjacent flowers in flowerbed

答案：
class Solution:
    def canPlaceFlowers(self, flowerbed: List[int], n: int) -> bool:
        if n == 0:          如果没有花，或者没有花剩
            return True;   则输出True
        m = len(flowerbed)    设置 m= 花坛的长度
        for i in range (m):    循环for ，i 在m 里面
            if flowerbed[i] == 1: continue     如果i 已经没有空位种花了，返回以前的起始，循环下一个位置
            if i > 0 and flowerbed[i-1]== 1 : continue     如果i 大于0 且它的前面有花了，不能种
            if (i + 1) < m  and flowerbed[i+1]== 1 : continue    如果i 后面有花了，也不能种
            flowerbed[i] = 1    剩下的满足种花的条件，每种一个就标识为1 ，意思是已种
            n -= 1     剩下了（n - 1）盆，依次循环
            if n== 0: return True    如果最后n== 0， 意思是没有花剩了，则输出True
        return False    跳出for loop循环，最终不能满足for里面的条件，输出False
