88. Merge Sorted Array
Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.

The number of elements initialized in nums1 and nums2 are m and n respectively. 
You may assume that nums1 has a size equal to m + n such that it has enough space to hold additional elements from nums2.
题目分析：
1.给出两个已经拍好顺序的array数组 nums1 和 nums2 
2.nums1 有 m 个 element 元素
  nums2 有 n 个 element 元素
3.可以假设nums1 中有足够的空间也就是 m+n 个位置 可以放进 nums2，空位可以由0来代替
 

Example 1:

Input: nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3
Output: [1,2,2,3,5,6]
Example 2:

Input: nums1 = [1], m = 1, nums2 = [], n = 0
Output: [1]
 

Constraints:

nums1.length == m + n
nums2.length == n
0 <= m, n <= 200
1 <= m + n <= 200
-109 <= nums1[i], nums2[i] <= 109



答案：（javascript 做法）
let merge = function(nums1, m, nums2, n){                            让nums1 ，nums2，m， n 结合在一起
            let first = m-1;                          这里的first代表之前nums1 的数组array的最后一个字母的顺序， 顺序由0 到 m-1
            let second = n - 1;                           这里的second 代表之前nums2 的数组array的最后一个字母的顺序， 顺序由0 到 n-1
            
            for ( let i = m + n - 1; i>= 0; i--){             for loop 循环，想把i的范围定义一下，i是两个组合array （m+ n）个元素加起来，最后一个字母的index 为m+n-1
                if (second < 0){                             如果第二个array的序号小于0 ， 意思是第二个组都剩下0个元素了  
                    break;                            就结束这个for loop 循环
                }
                
                if (first >=0 && nums1[first] > nums2[second]){              if 条件语句， 如果第一个组的序号大于0， 并且 nums1 > nums2
                    nums1[i] = nums1[first];                            那么新的组合i的位置就由第一个组相对应的值替换
                    first--;                                           依次从后面到前面循环
                } else {                                                不然的话，如果 nums2 > nums1
                    nums1[i] = nums2[second];                         nums2 代替新的数字array i 的位置
                    second--;                                            nums2 数组依次从后面到前面循环遍历
                }
            } 
};


另一种答案：（Java 的写法）

public void merge(int[] nums1, int m, int[] nums2, int n) {    算法描述 把长度为n的输入序列分成两个长度为n/2的子序列；对这两个子序列分别采用归并排序；将两个排序好的子序列合并成一个最终的排序序列。
   
    int index1 = m - 1, index2 = n - 1;
    int indexMerge = m + n - 1;
    while (index1 >= 0 || index2 >= 0) {
        if (index1 < 0) {
            nums1[indexMerge--] = nums2[index2--];
        } else if (index2 < 0) {
            nums1[indexMerge--] = nums1[index1--];
        } else if (nums1[index1] > nums2[index2]) {
            nums1[indexMerge--] = nums1[index1--];
        } else {
            nums1[indexMerge--] = nums2[index2--];
        }
    }
}
