141. Linked List Cycle环形链表
Given head, the head of a linked list, determine if the linked list has a cycle in it. 

There is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. 
Internally, pos is used to denote the index of the node that tail's next pointer is connected to. Note that pos is not passed as a parameter.

Return true if there is a cycle in the linked list. Otherwise, return false.

题目分析：
1.给出一个链表， 判断其是否有环
2.在链表上有一些node 节点可以被再次到达，这样可以判断是否存在环
3.pos 可以用来识别demote表示 index ofthe 节点node，表示链表的尾部连接链表的地方，pos不用来做参数

Example 1:


Input: head = [3,2,0,-4], pos = 1
Output: true
Explanation: There is a cycle in the linked list, where the tail connects to the 1st node (0-indexed).
Example 2:


Input: head = [1,2], pos = 0
Output: true
Explanation: There is a cycle in the linked list, where the tail connects to the 0th node.
Example 3:


Input: head = [1], pos = -1
Output: false
Explanation: There is no cycle in the linked list.
 

Constraints:

The number of the nodes in the list is in the range [0, 104].
-105 <= Node.val <= 105
pos is -1 or a valid index in the linked-list.


答案：

