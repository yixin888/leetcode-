345. Reverse Vowels of a String
Write a function that takes a string as input and reverse only the vowels of a string.

题目分析:
1.给出一个字符串， 将它的字母从 前 跟 后 遍历
2.第一个字母在前面跟后面找到的 两个字母 互相交换
3. 接着找第二个元音字母，以此类推
4.元音字母为 a e i o u （5个）

Example 1:

Input: "hello"
Output: "holle"
Example 2:

Input: "leetcode"
Output: "leotcede"
Note:
The vowels does not include the letter "y".

答案：

class Solution {                                             class Solution ： 固定模式
    public String reverseVowels (String s) {                public + class类，例如String， reverseVowels： 转换前后顺序
        Set<Character> vowels = new HashSet<>();            new ： 新建一个array，   HashSet<>() : 静态初始化集合， 括号代表array
        vowels.add('a');vowels.add('A');
        vowels.add('e');vowels.add('E');
        vowels.add('i');vowels.add('I');                    加入 元音字母： a e i o u 和它们的大写
        vowels.add('o');vowels.add('O');
        vowels.add('u');vowels.add('U');
        
        int i = 0, j = s.length() -1;                      index 第一个字母为 0，最后一个字母的顺序为 长度-1， 因为它是从0 开始数起
        char[] ss = s.toCharArray();                      ？？？？ 不懂这一行的意思， char array，查相关资料
        
        while(i< j) {                                       while loop， 一个个遍历  while（+条件语句）{ 里面包含if - else if- else 语句} ，最后跳出loop 便return
            if(!vowels.contains(ss[i])) i++;              if （+条件语句）i++；  感叹号！意思是不包含，不成立后面的语句
            else if(!vowels.contains(ss[j])) j--;            else if（+条件语句）   ！ 是不包含，同上
            else{                                         else 后面不加条件语句 之间大括号输出
                char t = ss[i];                     设置char 数组等于ss【i】
                ss[i] = ss[j];                  将i 替换 j
                ss[j] = t;                       因为之前t= i， 所以把j替换t
                
                i++; j--;                         一个个依次遍历跟替换
            }
        }
        return String.valueOf(ss);                输出最后的string ss 的值， 这里的return是已经跳出loop 循环
    }
}
